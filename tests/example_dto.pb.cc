// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example_dto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "example_dto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace example_dto {
class PositionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Position> {
} _Position_default_instance_;
class TargetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Target> {
} _Target_default_instance_;
class ServoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Servo> {
} _Servo_default_instance_;

namespace protobuf_example_5fdto_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Target, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Target, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Target, updated_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Target, pos_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Servo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Servo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Servo, targets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Servo, rpm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Servo, air_),
  ~0u,
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(Position)},
  { 10, 16, sizeof(Target)},
  { 18, 25, sizeof(Servo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Target_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Servo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "example_dto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Position_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Target_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Servo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Position_default_instance_.DefaultConstruct();
  _Target_default_instance_.DefaultConstruct();
  _Servo_default_instance_.DefaultConstruct();
  _Target_default_instance_.get_mutable()->pos_ = const_cast< ::example_dto::Position*>(
      ::example_dto::Position::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021example_dto.proto\022\013example_dto\"+\n\010Posi"
      "tion\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\t\n\001z\030\003 \002(\001\"@\n"
      "\006Target\022\022\n\nupdated_at\030\001 \002(\022\022\"\n\003pos\030\002 \002(\013"
      "2\025.example_dto.Position\"Y\n\005Servo\022$\n\007targ"
      "ets\030\001 \003(\0132\023.example_dto.Target\022\013\n\003rpm\030\002 "
      "\001(\002\022\035\n\003air\030\003 \001(\0162\020.example_dto.Air*\030\n\003Ai"
      "r\022\007\n\003Hot\020\005\022\010\n\004Cold\020\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 260);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "example_dto.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_example_5fdto_2eproto

const ::google::protobuf::EnumDescriptor* Air_descriptor() {
  protobuf_example_5fdto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_example_5fdto_2eproto::file_level_enum_descriptors[0];
}
bool Air_IsValid(int value) {
  switch (value) {
    case 0:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kXFieldNumber;
const int Position::kYFieldNumber;
const int Position::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_example_5fdto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:example_dto.Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:example_dto.Position)
}

void Position::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:example_dto.Position)
  SharedDtor();
}

void Position::SharedDtor() {
}

void Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  protobuf_example_5fdto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_example_5fdto_2eproto::file_level_metadata[0].descriptor;
}

const Position& Position::default_instance() {
  protobuf_example_5fdto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Position* Position::New(::google::protobuf::Arena* arena) const {
  Position* n = new Position;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:example_dto.Position)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example_dto.Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9u) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17u) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double z = 3;
      case 3: {
        if (tag == 25u) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example_dto.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example_dto.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example_dto.Position)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example_dto.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:example_dto.Position)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example_dto.Position)
  return target;
}

size_t Position::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:example_dto.Position)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double z = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example_dto.Position)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

    // required double z = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:example_dto.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:example_dto.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:example_dto.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example_dto.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:example_dto.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example_dto.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_example_5fdto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_example_5fdto_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Position

// required double x = 1;
bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Position::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
double Position::x() const {
  // @@protoc_insertion_point(field_get:example_dto.Position.x)
  return x_;
}
void Position::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:example_dto.Position.x)
}

// required double y = 2;
bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Position::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
double Position::y() const {
  // @@protoc_insertion_point(field_get:example_dto.Position.y)
  return y_;
}
void Position::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:example_dto.Position.y)
}

// required double z = 3;
bool Position::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Position::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Position::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Position::clear_z() {
  z_ = 0;
  clear_has_z();
}
double Position::z() const {
  // @@protoc_insertion_point(field_get:example_dto.Position.z)
  return z_;
}
void Position::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:example_dto.Position.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Target::kUpdatedAtFieldNumber;
const int Target::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Target::Target()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_example_5fdto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:example_dto.Target)
}
Target::Target(const Target& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::example_dto::Position(*from.pos_);
  } else {
    pos_ = NULL;
  }
  updated_at_ = from.updated_at_;
  // @@protoc_insertion_point(copy_constructor:example_dto.Target)
}

void Target::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pos_, 0, reinterpret_cast<char*>(&updated_at_) -
    reinterpret_cast<char*>(&pos_) + sizeof(updated_at_));
}

Target::~Target() {
  // @@protoc_insertion_point(destructor:example_dto.Target)
  SharedDtor();
}

void Target::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pos_;
  }
}

void Target::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Target::descriptor() {
  protobuf_example_5fdto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_example_5fdto_2eproto::file_level_metadata[1].descriptor;
}

const Target& Target::default_instance() {
  protobuf_example_5fdto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Target* Target::New(::google::protobuf::Arena* arena) const {
  Target* n = new Target;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Target::Clear() {
// @@protoc_insertion_point(message_clear_start:example_dto.Target)
  if (has_pos()) {
    GOOGLE_DCHECK(pos_ != NULL);
    pos_->::example_dto::Position::Clear();
  }
  updated_at_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Target::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example_dto.Target)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint64 updated_at = 1;
      case 1: {
        if (tag == 8u) {
          set_has_updated_at();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &updated_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .example_dto.Position pos = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example_dto.Target)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example_dto.Target)
  return false;
#undef DO_
}

void Target::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example_dto.Target)
  // required sint64 updated_at = 1;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->updated_at(), output);
  }

  // required .example_dto.Position pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example_dto.Target)
}

::google::protobuf::uint8* Target::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:example_dto.Target)
  // required sint64 updated_at = 1;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->updated_at(), target);
  }

  // required .example_dto.Position pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example_dto.Target)
  return target;
}

size_t Target::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:example_dto.Target)
  size_t total_size = 0;

  if (has_pos()) {
    // required .example_dto.Position pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_updated_at()) {
    // required sint64 updated_at = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->updated_at());
  }

  return total_size;
}
size_t Target::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example_dto.Target)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .example_dto.Position pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required sint64 updated_at = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->updated_at());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Target::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:example_dto.Target)
  GOOGLE_DCHECK_NE(&from, this);
  const Target* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Target>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:example_dto.Target)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:example_dto.Target)
    MergeFrom(*source);
  }
}

void Target::MergeFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example_dto.Target)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_pos()) {
      mutable_pos()->::example_dto::Position::MergeFrom(from.pos());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
  }
}

void Target::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:example_dto.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Target::CopyFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example_dto.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Target::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  return true;
}

void Target::Swap(Target* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Target::InternalSwap(Target* other) {
  std::swap(pos_, other->pos_);
  std::swap(updated_at_, other->updated_at_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Target::GetMetadata() const {
  protobuf_example_5fdto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_example_5fdto_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Target

// required sint64 updated_at = 1;
bool Target::has_updated_at() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Target::set_has_updated_at() {
  _has_bits_[0] |= 0x00000002u;
}
void Target::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000002u;
}
void Target::clear_updated_at() {
  updated_at_ = GOOGLE_LONGLONG(0);
  clear_has_updated_at();
}
::google::protobuf::int64 Target::updated_at() const {
  // @@protoc_insertion_point(field_get:example_dto.Target.updated_at)
  return updated_at_;
}
void Target::set_updated_at(::google::protobuf::int64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:example_dto.Target.updated_at)
}

// required .example_dto.Position pos = 2;
bool Target::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Target::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void Target::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void Target::clear_pos() {
  if (pos_ != NULL) pos_->::example_dto::Position::Clear();
  clear_has_pos();
}
const ::example_dto::Position& Target::pos() const {
  // @@protoc_insertion_point(field_get:example_dto.Target.pos)
  return pos_ != NULL ? *pos_
                         : *::example_dto::Position::internal_default_instance();
}
::example_dto::Position* Target::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::example_dto::Position;
  }
  // @@protoc_insertion_point(field_mutable:example_dto.Target.pos)
  return pos_;
}
::example_dto::Position* Target::release_pos() {
  // @@protoc_insertion_point(field_release:example_dto.Target.pos)
  clear_has_pos();
  ::example_dto::Position* temp = pos_;
  pos_ = NULL;
  return temp;
}
void Target::set_allocated_pos(::example_dto::Position* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:example_dto.Target.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Servo::kTargetsFieldNumber;
const int Servo::kRpmFieldNumber;
const int Servo::kAirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Servo::Servo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_example_5fdto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:example_dto.Servo)
}
Servo::Servo(const Servo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      targets_(from.targets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rpm_, &from.rpm_,
    reinterpret_cast<char*>(&air_) -
    reinterpret_cast<char*>(&rpm_) + sizeof(air_));
  // @@protoc_insertion_point(copy_constructor:example_dto.Servo)
}

void Servo::SharedCtor() {
  _cached_size_ = 0;
  rpm_ = 0;
  air_ = 5;
}

Servo::~Servo() {
  // @@protoc_insertion_point(destructor:example_dto.Servo)
  SharedDtor();
}

void Servo::SharedDtor() {
}

void Servo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Servo::descriptor() {
  protobuf_example_5fdto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_example_5fdto_2eproto::file_level_metadata[2].descriptor;
}

const Servo& Servo::default_instance() {
  protobuf_example_5fdto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Servo* Servo::New(::google::protobuf::Arena* arena) const {
  Servo* n = new Servo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Servo::Clear() {
// @@protoc_insertion_point(message_clear_start:example_dto.Servo)
  targets_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    rpm_ = 0;
    air_ = 5;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Servo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example_dto.Servo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .example_dto.Target targets = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_targets()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional float rpm = 2;
      case 2: {
        if (tag == 21u) {
          set_has_rpm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rpm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .example_dto.Air air = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::example_dto::Air_IsValid(value)) {
            set_air(static_cast< ::example_dto::Air >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example_dto.Servo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example_dto.Servo)
  return false;
#undef DO_
}

void Servo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example_dto.Servo)
  // repeated .example_dto.Target targets = 1;
  for (unsigned int i = 0, n = this->targets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->targets(i), output);
  }

  // optional float rpm = 2;
  if (has_rpm()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->rpm(), output);
  }

  // optional .example_dto.Air air = 3;
  if (has_air()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->air(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example_dto.Servo)
}

::google::protobuf::uint8* Servo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:example_dto.Servo)
  // repeated .example_dto.Target targets = 1;
  for (unsigned int i = 0, n = this->targets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->targets(i), false, target);
  }

  // optional float rpm = 2;
  if (has_rpm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->rpm(), target);
  }

  // optional .example_dto.Air air = 3;
  if (has_air()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->air(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example_dto.Servo)
  return target;
}

size_t Servo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example_dto.Servo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .example_dto.Target targets = 1;
  {
    unsigned int count = this->targets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->targets(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional float rpm = 2;
    if (has_rpm()) {
      total_size += 1 + 4;
    }

    // optional .example_dto.Air air = 3;
    if (has_air()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->air());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Servo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:example_dto.Servo)
  GOOGLE_DCHECK_NE(&from, this);
  const Servo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Servo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:example_dto.Servo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:example_dto.Servo)
    MergeFrom(*source);
  }
}

void Servo::MergeFrom(const Servo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example_dto.Servo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targets_.MergeFrom(from.targets_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_rpm()) {
      set_rpm(from.rpm());
    }
    if (from.has_air()) {
      set_air(from.air());
    }
  }
}

void Servo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:example_dto.Servo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Servo::CopyFrom(const Servo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example_dto.Servo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Servo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->targets())) return false;
  return true;
}

void Servo::Swap(Servo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Servo::InternalSwap(Servo* other) {
  targets_.UnsafeArenaSwap(&other->targets_);
  std::swap(rpm_, other->rpm_);
  std::swap(air_, other->air_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Servo::GetMetadata() const {
  protobuf_example_5fdto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_example_5fdto_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Servo

// repeated .example_dto.Target targets = 1;
int Servo::targets_size() const {
  return targets_.size();
}
void Servo::clear_targets() {
  targets_.Clear();
}
const ::example_dto::Target& Servo::targets(int index) const {
  // @@protoc_insertion_point(field_get:example_dto.Servo.targets)
  return targets_.Get(index);
}
::example_dto::Target* Servo::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:example_dto.Servo.targets)
  return targets_.Mutable(index);
}
::example_dto::Target* Servo::add_targets() {
  // @@protoc_insertion_point(field_add:example_dto.Servo.targets)
  return targets_.Add();
}
::google::protobuf::RepeatedPtrField< ::example_dto::Target >*
Servo::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:example_dto.Servo.targets)
  return &targets_;
}
const ::google::protobuf::RepeatedPtrField< ::example_dto::Target >&
Servo::targets() const {
  // @@protoc_insertion_point(field_list:example_dto.Servo.targets)
  return targets_;
}

// optional float rpm = 2;
bool Servo::has_rpm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Servo::set_has_rpm() {
  _has_bits_[0] |= 0x00000001u;
}
void Servo::clear_has_rpm() {
  _has_bits_[0] &= ~0x00000001u;
}
void Servo::clear_rpm() {
  rpm_ = 0;
  clear_has_rpm();
}
float Servo::rpm() const {
  // @@protoc_insertion_point(field_get:example_dto.Servo.rpm)
  return rpm_;
}
void Servo::set_rpm(float value) {
  set_has_rpm();
  rpm_ = value;
  // @@protoc_insertion_point(field_set:example_dto.Servo.rpm)
}

// optional .example_dto.Air air = 3;
bool Servo::has_air() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Servo::set_has_air() {
  _has_bits_[0] |= 0x00000002u;
}
void Servo::clear_has_air() {
  _has_bits_[0] &= ~0x00000002u;
}
void Servo::clear_air() {
  air_ = 5;
  clear_has_air();
}
::example_dto::Air Servo::air() const {
  // @@protoc_insertion_point(field_get:example_dto.Servo.air)
  return static_cast< ::example_dto::Air >(air_);
}
void Servo::set_air(::example_dto::Air value) {
  assert(::example_dto::Air_IsValid(value));
  set_has_air();
  air_ = value;
  // @@protoc_insertion_point(field_set:example_dto.Servo.air)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace example_dto

// @@protoc_insertion_point(global_scope)
