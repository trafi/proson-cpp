// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dto {
class ValuesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Values> {
} _Values_default_instance_;
class NestedChildDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NestedChild> {
} _NestedChild_default_instance_;
class NestedParentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NestedParent> {
} _NestedParent_default_instance_;

namespace protobuf_dto_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valdouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valfloat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valuint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valuint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valsint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valsint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valsfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valsfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valbool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valstring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Values, valenum_),
  2,
  3,
  15,
  5,
  4,
  6,
  8,
  7,
  9,
  10,
  12,
  11,
  13,
  0,
  1,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedChild, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedChild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedChild, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedChild, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, optionalchild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, requiredchild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repdouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repfloat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repuint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repuint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repsint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repsint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repsfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repsfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repbool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repstring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedParent, repenum_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 20, sizeof(Values)},
  { 36, 42, sizeof(NestedChild)},
  { 44, 67, sizeof(NestedParent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Values_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NestedChild_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NestedParent_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Values_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _NestedChild_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _NestedParent_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Values_default_instance_.DefaultConstruct();
  _NestedChild_default_instance_.DefaultConstruct();
  _NestedParent_default_instance_.DefaultConstruct();
  _NestedParent_default_instance_.get_mutable()->optionalchild_ = const_cast< ::dto::NestedChild*>(
      ::dto::NestedChild::internal_default_instance());
  _NestedParent_default_instance_.get_mutable()->requiredchild_ = const_cast< ::dto::NestedChild*>(
      ::dto::NestedChild::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\tdto.proto\022\003dto\"\312\002\n\006Values\022\021\n\tValDouble"
      "\030\001 \002(\001\022\020\n\010ValFloat\030\002 \002(\002\022\024\n\010ValInt32\030\003 \002"
      "(\005:\00242\022\020\n\010ValInt64\030\004 \002(\003\022\021\n\tValUInt32\030\005 "
      "\002(\r\022\021\n\tValUInt64\030\006 \002(\004\022\021\n\tValSInt32\030\007 \002("
      "\021\022\021\n\tValSInt64\030\010 \002(\022\022\022\n\nValFixed32\030\t \002(\007"
      "\022\022\n\nValFixed64\030\n \002(\006\022\023\n\013ValSFixed32\030\013 \002("
      "\017\022\023\n\013ValSFixed64\030\014 \002(\020\022\017\n\007ValBool\030\r \002(\010\022"
      "\021\n\tValString\030\016 \002(\t\022\020\n\010ValBytes\030\017 \002(\014\022\037\n\007"
      "ValEnum\030\020 \002(\0162\016.dto.EnumValue\"#\n\013NestedC"
      "hild\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\"\302\003\n\014NestedPar"
      "ent\022\'\n\rOptionalChild\030\001 \001(\0132\020.dto.NestedC"
      "hild\022\'\n\rRequiredChild\030\002 \002(\0132\020.dto.Nested"
      "Child\022\"\n\010Children\030\003 \003(\0132\020.dto.NestedChil"
      "d\022\021\n\tRepDouble\030\004 \003(\001\022\020\n\010RepFloat\030\005 \003(\002\022\020"
      "\n\010RepInt32\030\006 \003(\005\022\020\n\010RepInt64\030\007 \003(\003\022\021\n\tRe"
      "pUInt32\030\010 \003(\r\022\021\n\tRepUInt64\030\t \003(\004\022\021\n\tRepS"
      "Int32\030\n \003(\021\022\021\n\tRepSInt64\030\013 \003(\022\022\022\n\nRepFix"
      "ed32\030\014 \003(\007\022\022\n\nRepFixed64\030\r \003(\006\022\023\n\013RepSFi"
      "xed32\030\016 \003(\017\022\023\n\013RepSFixed64\030\017 \003(\020\022\017\n\007RepB"
      "ool\030\020 \003(\010\022\021\n\tRepString\030\021 \003(\t\022\020\n\010RepBytes"
      "\030\022 \003(\014\022\037\n\007RepEnum\030\023 \003(\0162\016.dto.EnumValue*"
      "*\n\tEnumValue\022\010\n\004None\020\000\022\010\n\004Some\020\001\022\t\n\005Othe"
      "r\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 883);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dto.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dto_2eproto

const ::google::protobuf::EnumDescriptor* EnumValue_descriptor() {
  protobuf_dto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dto_2eproto::file_level_enum_descriptors[0];
}
bool EnumValue_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Values::kValDoubleFieldNumber;
const int Values::kValFloatFieldNumber;
const int Values::kValInt32FieldNumber;
const int Values::kValInt64FieldNumber;
const int Values::kValUInt32FieldNumber;
const int Values::kValUInt64FieldNumber;
const int Values::kValSInt32FieldNumber;
const int Values::kValSInt64FieldNumber;
const int Values::kValFixed32FieldNumber;
const int Values::kValFixed64FieldNumber;
const int Values::kValSFixed32FieldNumber;
const int Values::kValSFixed64FieldNumber;
const int Values::kValBoolFieldNumber;
const int Values::kValStringFieldNumber;
const int Values::kValBytesFieldNumber;
const int Values::kValEnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Values::Values()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.Values)
}
Values::Values(const Values& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  valstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_valstring()) {
    valstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valstring_);
  }
  valbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_valbytes()) {
    valbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valbytes_);
  }
  ::memcpy(&valdouble_, &from.valdouble_,
    reinterpret_cast<char*>(&valint32_) -
    reinterpret_cast<char*>(&valdouble_) + sizeof(valint32_));
  // @@protoc_insertion_point(copy_constructor:dto.Values)
}

void Values::SharedCtor() {
  _cached_size_ = 0;
  valstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valdouble_, 0, reinterpret_cast<char*>(&valenum_) -
    reinterpret_cast<char*>(&valdouble_) + sizeof(valenum_));
  valint32_ = 42;
}

Values::~Values() {
  // @@protoc_insertion_point(destructor:dto.Values)
  SharedDtor();
}

void Values::SharedDtor() {
  valstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valbytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Values::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Values::descriptor() {
  protobuf_dto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dto_2eproto::file_level_metadata[0].descriptor;
}

const Values& Values::default_instance() {
  protobuf_dto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Values* Values::New(::google::protobuf::Arena* arena) const {
  Values* n = new Values;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Values::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.Values)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_valstring()) {
      GOOGLE_DCHECK(!valstring_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*valstring_.UnsafeRawStringPointer())->clear();
    }
    if (has_valbytes()) {
      GOOGLE_DCHECK(!valbytes_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*valbytes_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&valdouble_, 0, reinterpret_cast<char*>(&valsint64_) -
      reinterpret_cast<char*>(&valdouble_) + sizeof(valsint64_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&valsint32_, 0, reinterpret_cast<char*>(&valenum_) -
      reinterpret_cast<char*>(&valsint32_) + sizeof(valenum_));
    valint32_ = 42;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Values::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.Values)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double ValDouble = 1;
      case 1: {
        if (tag == 9u) {
          set_has_valdouble();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valdouble_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float ValFloat = 2;
      case 2: {
        if (tag == 21u) {
          set_has_valfloat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valfloat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ValInt32 = 3 [default = 42];
      case 3: {
        if (tag == 24u) {
          set_has_valint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 ValInt64 = 4;
      case 4: {
        if (tag == 32u) {
          set_has_valint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &valint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ValUInt32 = 5;
      case 5: {
        if (tag == 40u) {
          set_has_valuint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &valuint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 ValUInt64 = 6;
      case 6: {
        if (tag == 48u) {
          set_has_valuint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &valuint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 ValSInt32 = 7;
      case 7: {
        if (tag == 56u) {
          set_has_valsint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &valsint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint64 ValSInt64 = 8;
      case 8: {
        if (tag == 64u) {
          set_has_valsint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &valsint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed32 ValFixed32 = 9;
      case 9: {
        if (tag == 77u) {
          set_has_valfixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &valfixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed64 ValFixed64 = 10;
      case 10: {
        if (tag == 81u) {
          set_has_valfixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &valfixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed32 ValSFixed32 = 11;
      case 11: {
        if (tag == 93u) {
          set_has_valsfixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &valsfixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 ValSFixed64 = 12;
      case 12: {
        if (tag == 97u) {
          set_has_valsfixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &valsfixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool ValBool = 13;
      case 13: {
        if (tag == 104u) {
          set_has_valbool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valbool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string ValString = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valstring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->valstring().data(), this->valstring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dto.Values.ValString");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ValBytes = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_valbytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .dto.EnumValue ValEnum = 16;
      case 16: {
        if (tag == 128u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dto::EnumValue_IsValid(value)) {
            set_valenum(static_cast< ::dto::EnumValue >(value));
          } else {
            mutable_unknown_fields()->AddVarint(16, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.Values)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.Values)
  return false;
#undef DO_
}

void Values::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.Values)
  // required double ValDouble = 1;
  if (has_valdouble()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->valdouble(), output);
  }

  // required float ValFloat = 2;
  if (has_valfloat()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->valfloat(), output);
  }

  // required int32 ValInt32 = 3 [default = 42];
  if (has_valint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->valint32(), output);
  }

  // required int64 ValInt64 = 4;
  if (has_valint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->valint64(), output);
  }

  // required uint32 ValUInt32 = 5;
  if (has_valuint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->valuint32(), output);
  }

  // required uint64 ValUInt64 = 6;
  if (has_valuint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->valuint64(), output);
  }

  // required sint32 ValSInt32 = 7;
  if (has_valsint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->valsint32(), output);
  }

  // required sint64 ValSInt64 = 8;
  if (has_valsint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->valsint64(), output);
  }

  // required fixed32 ValFixed32 = 9;
  if (has_valfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(9, this->valfixed32(), output);
  }

  // required fixed64 ValFixed64 = 10;
  if (has_valfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->valfixed64(), output);
  }

  // required sfixed32 ValSFixed32 = 11;
  if (has_valsfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(11, this->valsfixed32(), output);
  }

  // required sfixed64 ValSFixed64 = 12;
  if (has_valsfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(12, this->valsfixed64(), output);
  }

  // required bool ValBool = 13;
  if (has_valbool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->valbool(), output);
  }

  // required string ValString = 14;
  if (has_valstring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valstring().data(), this->valstring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dto.Values.ValString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->valstring(), output);
  }

  // required bytes ValBytes = 15;
  if (has_valbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->valbytes(), output);
  }

  // required .dto.EnumValue ValEnum = 16;
  if (has_valenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->valenum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.Values)
}

::google::protobuf::uint8* Values::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.Values)
  // required double ValDouble = 1;
  if (has_valdouble()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->valdouble(), target);
  }

  // required float ValFloat = 2;
  if (has_valfloat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->valfloat(), target);
  }

  // required int32 ValInt32 = 3 [default = 42];
  if (has_valint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->valint32(), target);
  }

  // required int64 ValInt64 = 4;
  if (has_valint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->valint64(), target);
  }

  // required uint32 ValUInt32 = 5;
  if (has_valuint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->valuint32(), target);
  }

  // required uint64 ValUInt64 = 6;
  if (has_valuint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->valuint64(), target);
  }

  // required sint32 ValSInt32 = 7;
  if (has_valsint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->valsint32(), target);
  }

  // required sint64 ValSInt64 = 8;
  if (has_valsint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->valsint64(), target);
  }

  // required fixed32 ValFixed32 = 9;
  if (has_valfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(9, this->valfixed32(), target);
  }

  // required fixed64 ValFixed64 = 10;
  if (has_valfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->valfixed64(), target);
  }

  // required sfixed32 ValSFixed32 = 11;
  if (has_valsfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(11, this->valsfixed32(), target);
  }

  // required sfixed64 ValSFixed64 = 12;
  if (has_valsfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(12, this->valsfixed64(), target);
  }

  // required bool ValBool = 13;
  if (has_valbool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->valbool(), target);
  }

  // required string ValString = 14;
  if (has_valstring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valstring().data(), this->valstring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dto.Values.ValString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->valstring(), target);
  }

  // required bytes ValBytes = 15;
  if (has_valbytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->valbytes(), target);
  }

  // required .dto.EnumValue ValEnum = 16;
  if (has_valenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->valenum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.Values)
  return target;
}

size_t Values::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dto.Values)
  size_t total_size = 0;

  if (has_valstring()) {
    // required string ValString = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->valstring());
  }

  if (has_valbytes()) {
    // required bytes ValBytes = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->valbytes());
  }

  if (has_valdouble()) {
    // required double ValDouble = 1;
    total_size += 1 + 8;
  }

  if (has_valfloat()) {
    // required float ValFloat = 2;
    total_size += 1 + 4;
  }

  if (has_valuint32()) {
    // required uint32 ValUInt32 = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->valuint32());
  }

  if (has_valint64()) {
    // required int64 ValInt64 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->valint64());
  }

  if (has_valuint64()) {
    // required uint64 ValUInt64 = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->valuint64());
  }

  if (has_valsint64()) {
    // required sint64 ValSInt64 = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->valsint64());
  }

  if (has_valsint32()) {
    // required sint32 ValSInt32 = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->valsint32());
  }

  if (has_valfixed32()) {
    // required fixed32 ValFixed32 = 9;
    total_size += 1 + 4;
  }

  if (has_valfixed64()) {
    // required fixed64 ValFixed64 = 10;
    total_size += 1 + 8;
  }

  if (has_valsfixed64()) {
    // required sfixed64 ValSFixed64 = 12;
    total_size += 1 + 8;
  }

  if (has_valsfixed32()) {
    // required sfixed32 ValSFixed32 = 11;
    total_size += 1 + 4;
  }

  if (has_valbool()) {
    // required bool ValBool = 13;
    total_size += 1 + 1;
  }

  if (has_valenum()) {
    // required .dto.EnumValue ValEnum = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->valenum());
  }

  if (has_valint32()) {
    // required int32 ValInt32 = 3 [default = 42];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->valint32());
  }

  return total_size;
}
size_t Values::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.Values)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000ffff) ^ 0x0000ffff) == 0) {  // All required fields are present.
    // required string ValString = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->valstring());

    // required bytes ValBytes = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->valbytes());

    // required double ValDouble = 1;
    total_size += 1 + 8;

    // required float ValFloat = 2;
    total_size += 1 + 4;

    // required uint32 ValUInt32 = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->valuint32());

    // required int64 ValInt64 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->valint64());

    // required uint64 ValUInt64 = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->valuint64());

    // required sint64 ValSInt64 = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->valsint64());

    // required sint32 ValSInt32 = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->valsint32());

    // required fixed32 ValFixed32 = 9;
    total_size += 1 + 4;

    // required fixed64 ValFixed64 = 10;
    total_size += 1 + 8;

    // required sfixed64 ValSFixed64 = 12;
    total_size += 1 + 8;

    // required sfixed32 ValSFixed32 = 11;
    total_size += 1 + 4;

    // required bool ValBool = 13;
    total_size += 1 + 1;

    // required .dto.EnumValue ValEnum = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->valenum());

    // required int32 ValInt32 = 3 [default = 42];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->valint32());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Values::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.Values)
  GOOGLE_DCHECK_NE(&from, this);
  const Values* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Values>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.Values)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.Values)
    MergeFrom(*source);
  }
}

void Values::MergeFrom(const Values& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.Values)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_valstring()) {
      set_has_valstring();
      valstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valstring_);
    }
    if (from.has_valbytes()) {
      set_has_valbytes();
      valbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valbytes_);
    }
    if (from.has_valdouble()) {
      set_valdouble(from.valdouble());
    }
    if (from.has_valfloat()) {
      set_valfloat(from.valfloat());
    }
    if (from.has_valuint32()) {
      set_valuint32(from.valuint32());
    }
    if (from.has_valint64()) {
      set_valint64(from.valint64());
    }
    if (from.has_valuint64()) {
      set_valuint64(from.valuint64());
    }
    if (from.has_valsint64()) {
      set_valsint64(from.valsint64());
    }
  }
  if (from._has_bits_[8 / 32] & 65280u) {
    if (from.has_valsint32()) {
      set_valsint32(from.valsint32());
    }
    if (from.has_valfixed32()) {
      set_valfixed32(from.valfixed32());
    }
    if (from.has_valfixed64()) {
      set_valfixed64(from.valfixed64());
    }
    if (from.has_valsfixed64()) {
      set_valsfixed64(from.valsfixed64());
    }
    if (from.has_valsfixed32()) {
      set_valsfixed32(from.valsfixed32());
    }
    if (from.has_valbool()) {
      set_valbool(from.valbool());
    }
    if (from.has_valenum()) {
      set_valenum(from.valenum());
    }
    if (from.has_valint32()) {
      set_valint32(from.valint32());
    }
  }
}

void Values::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.Values)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Values::CopyFrom(const Values& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.Values)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Values::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000ffff) != 0x0000ffff) return false;
  return true;
}

void Values::Swap(Values* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Values::InternalSwap(Values* other) {
  valstring_.Swap(&other->valstring_);
  valbytes_.Swap(&other->valbytes_);
  std::swap(valdouble_, other->valdouble_);
  std::swap(valfloat_, other->valfloat_);
  std::swap(valuint32_, other->valuint32_);
  std::swap(valint64_, other->valint64_);
  std::swap(valuint64_, other->valuint64_);
  std::swap(valsint64_, other->valsint64_);
  std::swap(valsint32_, other->valsint32_);
  std::swap(valfixed32_, other->valfixed32_);
  std::swap(valfixed64_, other->valfixed64_);
  std::swap(valsfixed64_, other->valsfixed64_);
  std::swap(valsfixed32_, other->valsfixed32_);
  std::swap(valbool_, other->valbool_);
  std::swap(valenum_, other->valenum_);
  std::swap(valint32_, other->valint32_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Values::GetMetadata() const {
  protobuf_dto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dto_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Values

// required double ValDouble = 1;
bool Values::has_valdouble() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Values::set_has_valdouble() {
  _has_bits_[0] |= 0x00000004u;
}
void Values::clear_has_valdouble() {
  _has_bits_[0] &= ~0x00000004u;
}
void Values::clear_valdouble() {
  valdouble_ = 0;
  clear_has_valdouble();
}
double Values::valdouble() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValDouble)
  return valdouble_;
}
void Values::set_valdouble(double value) {
  set_has_valdouble();
  valdouble_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValDouble)
}

// required float ValFloat = 2;
bool Values::has_valfloat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Values::set_has_valfloat() {
  _has_bits_[0] |= 0x00000008u;
}
void Values::clear_has_valfloat() {
  _has_bits_[0] &= ~0x00000008u;
}
void Values::clear_valfloat() {
  valfloat_ = 0;
  clear_has_valfloat();
}
float Values::valfloat() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValFloat)
  return valfloat_;
}
void Values::set_valfloat(float value) {
  set_has_valfloat();
  valfloat_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValFloat)
}

// required int32 ValInt32 = 3 [default = 42];
bool Values::has_valint32() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Values::set_has_valint32() {
  _has_bits_[0] |= 0x00008000u;
}
void Values::clear_has_valint32() {
  _has_bits_[0] &= ~0x00008000u;
}
void Values::clear_valint32() {
  valint32_ = 42;
  clear_has_valint32();
}
::google::protobuf::int32 Values::valint32() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValInt32)
  return valint32_;
}
void Values::set_valint32(::google::protobuf::int32 value) {
  set_has_valint32();
  valint32_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValInt32)
}

// required int64 ValInt64 = 4;
bool Values::has_valint64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Values::set_has_valint64() {
  _has_bits_[0] |= 0x00000020u;
}
void Values::clear_has_valint64() {
  _has_bits_[0] &= ~0x00000020u;
}
void Values::clear_valint64() {
  valint64_ = GOOGLE_LONGLONG(0);
  clear_has_valint64();
}
::google::protobuf::int64 Values::valint64() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValInt64)
  return valint64_;
}
void Values::set_valint64(::google::protobuf::int64 value) {
  set_has_valint64();
  valint64_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValInt64)
}

// required uint32 ValUInt32 = 5;
bool Values::has_valuint32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Values::set_has_valuint32() {
  _has_bits_[0] |= 0x00000010u;
}
void Values::clear_has_valuint32() {
  _has_bits_[0] &= ~0x00000010u;
}
void Values::clear_valuint32() {
  valuint32_ = 0u;
  clear_has_valuint32();
}
::google::protobuf::uint32 Values::valuint32() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValUInt32)
  return valuint32_;
}
void Values::set_valuint32(::google::protobuf::uint32 value) {
  set_has_valuint32();
  valuint32_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValUInt32)
}

// required uint64 ValUInt64 = 6;
bool Values::has_valuint64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Values::set_has_valuint64() {
  _has_bits_[0] |= 0x00000040u;
}
void Values::clear_has_valuint64() {
  _has_bits_[0] &= ~0x00000040u;
}
void Values::clear_valuint64() {
  valuint64_ = GOOGLE_ULONGLONG(0);
  clear_has_valuint64();
}
::google::protobuf::uint64 Values::valuint64() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValUInt64)
  return valuint64_;
}
void Values::set_valuint64(::google::protobuf::uint64 value) {
  set_has_valuint64();
  valuint64_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValUInt64)
}

// required sint32 ValSInt32 = 7;
bool Values::has_valsint32() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Values::set_has_valsint32() {
  _has_bits_[0] |= 0x00000100u;
}
void Values::clear_has_valsint32() {
  _has_bits_[0] &= ~0x00000100u;
}
void Values::clear_valsint32() {
  valsint32_ = 0;
  clear_has_valsint32();
}
::google::protobuf::int32 Values::valsint32() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValSInt32)
  return valsint32_;
}
void Values::set_valsint32(::google::protobuf::int32 value) {
  set_has_valsint32();
  valsint32_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValSInt32)
}

// required sint64 ValSInt64 = 8;
bool Values::has_valsint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Values::set_has_valsint64() {
  _has_bits_[0] |= 0x00000080u;
}
void Values::clear_has_valsint64() {
  _has_bits_[0] &= ~0x00000080u;
}
void Values::clear_valsint64() {
  valsint64_ = GOOGLE_LONGLONG(0);
  clear_has_valsint64();
}
::google::protobuf::int64 Values::valsint64() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValSInt64)
  return valsint64_;
}
void Values::set_valsint64(::google::protobuf::int64 value) {
  set_has_valsint64();
  valsint64_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValSInt64)
}

// required fixed32 ValFixed32 = 9;
bool Values::has_valfixed32() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Values::set_has_valfixed32() {
  _has_bits_[0] |= 0x00000200u;
}
void Values::clear_has_valfixed32() {
  _has_bits_[0] &= ~0x00000200u;
}
void Values::clear_valfixed32() {
  valfixed32_ = 0u;
  clear_has_valfixed32();
}
::google::protobuf::uint32 Values::valfixed32() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValFixed32)
  return valfixed32_;
}
void Values::set_valfixed32(::google::protobuf::uint32 value) {
  set_has_valfixed32();
  valfixed32_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValFixed32)
}

// required fixed64 ValFixed64 = 10;
bool Values::has_valfixed64() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Values::set_has_valfixed64() {
  _has_bits_[0] |= 0x00000400u;
}
void Values::clear_has_valfixed64() {
  _has_bits_[0] &= ~0x00000400u;
}
void Values::clear_valfixed64() {
  valfixed64_ = GOOGLE_ULONGLONG(0);
  clear_has_valfixed64();
}
::google::protobuf::uint64 Values::valfixed64() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValFixed64)
  return valfixed64_;
}
void Values::set_valfixed64(::google::protobuf::uint64 value) {
  set_has_valfixed64();
  valfixed64_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValFixed64)
}

// required sfixed32 ValSFixed32 = 11;
bool Values::has_valsfixed32() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Values::set_has_valsfixed32() {
  _has_bits_[0] |= 0x00001000u;
}
void Values::clear_has_valsfixed32() {
  _has_bits_[0] &= ~0x00001000u;
}
void Values::clear_valsfixed32() {
  valsfixed32_ = 0;
  clear_has_valsfixed32();
}
::google::protobuf::int32 Values::valsfixed32() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValSFixed32)
  return valsfixed32_;
}
void Values::set_valsfixed32(::google::protobuf::int32 value) {
  set_has_valsfixed32();
  valsfixed32_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValSFixed32)
}

// required sfixed64 ValSFixed64 = 12;
bool Values::has_valsfixed64() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Values::set_has_valsfixed64() {
  _has_bits_[0] |= 0x00000800u;
}
void Values::clear_has_valsfixed64() {
  _has_bits_[0] &= ~0x00000800u;
}
void Values::clear_valsfixed64() {
  valsfixed64_ = GOOGLE_LONGLONG(0);
  clear_has_valsfixed64();
}
::google::protobuf::int64 Values::valsfixed64() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValSFixed64)
  return valsfixed64_;
}
void Values::set_valsfixed64(::google::protobuf::int64 value) {
  set_has_valsfixed64();
  valsfixed64_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValSFixed64)
}

// required bool ValBool = 13;
bool Values::has_valbool() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Values::set_has_valbool() {
  _has_bits_[0] |= 0x00002000u;
}
void Values::clear_has_valbool() {
  _has_bits_[0] &= ~0x00002000u;
}
void Values::clear_valbool() {
  valbool_ = false;
  clear_has_valbool();
}
bool Values::valbool() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValBool)
  return valbool_;
}
void Values::set_valbool(bool value) {
  set_has_valbool();
  valbool_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValBool)
}

// required string ValString = 14;
bool Values::has_valstring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Values::set_has_valstring() {
  _has_bits_[0] |= 0x00000001u;
}
void Values::clear_has_valstring() {
  _has_bits_[0] &= ~0x00000001u;
}
void Values::clear_valstring() {
  valstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_valstring();
}
const ::std::string& Values::valstring() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValString)
  return valstring_.GetNoArena();
}
void Values::set_valstring(const ::std::string& value) {
  set_has_valstring();
  valstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dto.Values.ValString)
}
#if LANG_CXX11
void Values::set_valstring(::std::string&& value) {
  set_has_valstring();
  valstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dto.Values.ValString)
}
#endif
void Values::set_valstring(const char* value) {
  set_has_valstring();
  valstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dto.Values.ValString)
}
void Values::set_valstring(const char* value, size_t size) {
  set_has_valstring();
  valstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dto.Values.ValString)
}
::std::string* Values::mutable_valstring() {
  set_has_valstring();
  // @@protoc_insertion_point(field_mutable:dto.Values.ValString)
  return valstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Values::release_valstring() {
  // @@protoc_insertion_point(field_release:dto.Values.ValString)
  clear_has_valstring();
  return valstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Values::set_allocated_valstring(::std::string* valstring) {
  if (valstring != NULL) {
    set_has_valstring();
  } else {
    clear_has_valstring();
  }
  valstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valstring);
  // @@protoc_insertion_point(field_set_allocated:dto.Values.ValString)
}

// required bytes ValBytes = 15;
bool Values::has_valbytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Values::set_has_valbytes() {
  _has_bits_[0] |= 0x00000002u;
}
void Values::clear_has_valbytes() {
  _has_bits_[0] &= ~0x00000002u;
}
void Values::clear_valbytes() {
  valbytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_valbytes();
}
const ::std::string& Values::valbytes() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValBytes)
  return valbytes_.GetNoArena();
}
void Values::set_valbytes(const ::std::string& value) {
  set_has_valbytes();
  valbytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dto.Values.ValBytes)
}
#if LANG_CXX11
void Values::set_valbytes(::std::string&& value) {
  set_has_valbytes();
  valbytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dto.Values.ValBytes)
}
#endif
void Values::set_valbytes(const char* value) {
  set_has_valbytes();
  valbytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dto.Values.ValBytes)
}
void Values::set_valbytes(const void* value, size_t size) {
  set_has_valbytes();
  valbytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dto.Values.ValBytes)
}
::std::string* Values::mutable_valbytes() {
  set_has_valbytes();
  // @@protoc_insertion_point(field_mutable:dto.Values.ValBytes)
  return valbytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Values::release_valbytes() {
  // @@protoc_insertion_point(field_release:dto.Values.ValBytes)
  clear_has_valbytes();
  return valbytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Values::set_allocated_valbytes(::std::string* valbytes) {
  if (valbytes != NULL) {
    set_has_valbytes();
  } else {
    clear_has_valbytes();
  }
  valbytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valbytes);
  // @@protoc_insertion_point(field_set_allocated:dto.Values.ValBytes)
}

// required .dto.EnumValue ValEnum = 16;
bool Values::has_valenum() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Values::set_has_valenum() {
  _has_bits_[0] |= 0x00004000u;
}
void Values::clear_has_valenum() {
  _has_bits_[0] &= ~0x00004000u;
}
void Values::clear_valenum() {
  valenum_ = 0;
  clear_has_valenum();
}
::dto::EnumValue Values::valenum() const {
  // @@protoc_insertion_point(field_get:dto.Values.ValEnum)
  return static_cast< ::dto::EnumValue >(valenum_);
}
void Values::set_valenum(::dto::EnumValue value) {
  assert(::dto::EnumValue_IsValid(value));
  set_has_valenum();
  valenum_ = value;
  // @@protoc_insertion_point(field_set:dto.Values.ValEnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NestedChild::kXFieldNumber;
const int NestedChild::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NestedChild::NestedChild()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.NestedChild)
}
NestedChild::NestedChild(const NestedChild& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:dto.NestedChild)
}

void NestedChild::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
}

NestedChild::~NestedChild() {
  // @@protoc_insertion_point(destructor:dto.NestedChild)
  SharedDtor();
}

void NestedChild::SharedDtor() {
}

void NestedChild::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NestedChild::descriptor() {
  protobuf_dto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dto_2eproto::file_level_metadata[1].descriptor;
}

const NestedChild& NestedChild::default_instance() {
  protobuf_dto_2eproto::InitDefaults();
  return *internal_default_instance();
}

NestedChild* NestedChild::New(::google::protobuf::Arena* arena) const {
  NestedChild* n = new NestedChild;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NestedChild::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.NestedChild)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NestedChild::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.NestedChild)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (tag == 13u) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (tag == 21u) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.NestedChild)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.NestedChild)
  return false;
#undef DO_
}

void NestedChild::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.NestedChild)
  // required float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.NestedChild)
}

::google::protobuf::uint8* NestedChild::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.NestedChild)
  // required float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.NestedChild)
  return target;
}

size_t NestedChild::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dto.NestedChild)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t NestedChild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.NestedChild)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NestedChild::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.NestedChild)
  GOOGLE_DCHECK_NE(&from, this);
  const NestedChild* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NestedChild>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.NestedChild)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.NestedChild)
    MergeFrom(*source);
  }
}

void NestedChild::MergeFrom(const NestedChild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.NestedChild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
}

void NestedChild::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.NestedChild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NestedChild::CopyFrom(const NestedChild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.NestedChild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NestedChild::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void NestedChild::Swap(NestedChild* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NestedChild::InternalSwap(NestedChild* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NestedChild::GetMetadata() const {
  protobuf_dto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dto_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NestedChild

// required float x = 1;
bool NestedChild::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NestedChild::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void NestedChild::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void NestedChild::clear_x() {
  x_ = 0;
  clear_has_x();
}
float NestedChild::x() const {
  // @@protoc_insertion_point(field_get:dto.NestedChild.x)
  return x_;
}
void NestedChild::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:dto.NestedChild.x)
}

// required float y = 2;
bool NestedChild::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NestedChild::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void NestedChild::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void NestedChild::clear_y() {
  y_ = 0;
  clear_has_y();
}
float NestedChild::y() const {
  // @@protoc_insertion_point(field_get:dto.NestedChild.y)
  return y_;
}
void NestedChild::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:dto.NestedChild.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NestedParent::kOptionalChildFieldNumber;
const int NestedParent::kRequiredChildFieldNumber;
const int NestedParent::kChildrenFieldNumber;
const int NestedParent::kRepDoubleFieldNumber;
const int NestedParent::kRepFloatFieldNumber;
const int NestedParent::kRepInt32FieldNumber;
const int NestedParent::kRepInt64FieldNumber;
const int NestedParent::kRepUInt32FieldNumber;
const int NestedParent::kRepUInt64FieldNumber;
const int NestedParent::kRepSInt32FieldNumber;
const int NestedParent::kRepSInt64FieldNumber;
const int NestedParent::kRepFixed32FieldNumber;
const int NestedParent::kRepFixed64FieldNumber;
const int NestedParent::kRepSFixed32FieldNumber;
const int NestedParent::kRepSFixed64FieldNumber;
const int NestedParent::kRepBoolFieldNumber;
const int NestedParent::kRepStringFieldNumber;
const int NestedParent::kRepBytesFieldNumber;
const int NestedParent::kRepEnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NestedParent::NestedParent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.NestedParent)
}
NestedParent::NestedParent(const NestedParent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      children_(from.children_),
      repdouble_(from.repdouble_),
      repfloat_(from.repfloat_),
      repint32_(from.repint32_),
      repint64_(from.repint64_),
      repuint32_(from.repuint32_),
      repuint64_(from.repuint64_),
      repsint32_(from.repsint32_),
      repsint64_(from.repsint64_),
      repfixed32_(from.repfixed32_),
      repfixed64_(from.repfixed64_),
      repsfixed32_(from.repsfixed32_),
      repsfixed64_(from.repsfixed64_),
      repbool_(from.repbool_),
      repstring_(from.repstring_),
      repbytes_(from.repbytes_),
      repenum_(from.repenum_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_optionalchild()) {
    optionalchild_ = new ::dto::NestedChild(*from.optionalchild_);
  } else {
    optionalchild_ = NULL;
  }
  if (from.has_requiredchild()) {
    requiredchild_ = new ::dto::NestedChild(*from.requiredchild_);
  } else {
    requiredchild_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dto.NestedParent)
}

void NestedParent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&optionalchild_, 0, reinterpret_cast<char*>(&requiredchild_) -
    reinterpret_cast<char*>(&optionalchild_) + sizeof(requiredchild_));
}

NestedParent::~NestedParent() {
  // @@protoc_insertion_point(destructor:dto.NestedParent)
  SharedDtor();
}

void NestedParent::SharedDtor() {
  if (this != internal_default_instance()) {
    delete optionalchild_;
  }
  if (this != internal_default_instance()) {
    delete requiredchild_;
  }
}

void NestedParent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NestedParent::descriptor() {
  protobuf_dto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dto_2eproto::file_level_metadata[2].descriptor;
}

const NestedParent& NestedParent::default_instance() {
  protobuf_dto_2eproto::InitDefaults();
  return *internal_default_instance();
}

NestedParent* NestedParent::New(::google::protobuf::Arena* arena) const {
  NestedParent* n = new NestedParent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NestedParent::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.NestedParent)
  children_.Clear();
  repdouble_.Clear();
  repfloat_.Clear();
  repint32_.Clear();
  repint64_.Clear();
  repuint32_.Clear();
  repuint64_.Clear();
  repsint32_.Clear();
  repsint64_.Clear();
  repfixed32_.Clear();
  repfixed64_.Clear();
  repsfixed32_.Clear();
  repsfixed64_.Clear();
  repbool_.Clear();
  repstring_.Clear();
  repbytes_.Clear();
  repenum_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_optionalchild()) {
      GOOGLE_DCHECK(optionalchild_ != NULL);
      optionalchild_->::dto::NestedChild::Clear();
    }
    if (has_requiredchild()) {
      GOOGLE_DCHECK(requiredchild_ != NULL);
      requiredchild_->::dto::NestedChild::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NestedParent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.NestedParent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dto.NestedChild OptionalChild = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optionalchild()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .dto.NestedChild RequiredChild = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_requiredchild()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dto.NestedChild Children = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated double RepDouble = 4;
      case 4: {
        if (tag == 33u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33u, input, this->mutable_repdouble())));
        } else if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_repdouble())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float RepFloat = 5;
      case 5: {
        if (tag == 45u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 45u, input, this->mutable_repfloat())));
        } else if (tag == 42u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_repfloat())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 RepInt32 = 6;
      case 6: {
        if (tag == 48u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_repint32())));
        } else if (tag == 50u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 RepInt64 = 7;
      case 7: {
        if (tag == 56u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 56u, input, this->mutable_repint64())));
        } else if (tag == 58u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_repint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 RepUInt32 = 8;
      case 8: {
        if (tag == 64u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64u, input, this->mutable_repuint32())));
        } else if (tag == 66u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_repuint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 RepUInt64 = 9;
      case 9: {
        if (tag == 72u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 72u, input, this->mutable_repuint64())));
        } else if (tag == 74u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_repuint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 RepSInt32 = 10;
      case 10: {
        if (tag == 80u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 80u, input, this->mutable_repsint32())));
        } else if (tag == 82u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_repsint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 RepSInt64 = 11;
      case 11: {
        if (tag == 88u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 88u, input, this->mutable_repsint64())));
        } else if (tag == 90u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_repsint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 RepFixed32 = 12;
      case 12: {
        if (tag == 101u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 101u, input, this->mutable_repfixed32())));
        } else if (tag == 98u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_repfixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 RepFixed64 = 13;
      case 13: {
        if (tag == 105u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 105u, input, this->mutable_repfixed64())));
        } else if (tag == 106u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_repfixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 RepSFixed32 = 14;
      case 14: {
        if (tag == 117u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 117u, input, this->mutable_repsfixed32())));
        } else if (tag == 114u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_repsfixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 RepSFixed64 = 15;
      case 15: {
        if (tag == 121u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 121u, input, this->mutable_repsfixed64())));
        } else if (tag == 122u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_repsfixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool RepBool = 16;
      case 16: {
        if (tag == 128u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 128u, input, this->mutable_repbool())));
        } else if (tag == 130u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_repbool())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string RepString = 17;
      case 17: {
        if (tag == 138u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repstring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repstring(this->repstring_size() - 1).data(),
            this->repstring(this->repstring_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dto.NestedParent.RepString");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes RepBytes = 18;
      case 18: {
        if (tag == 146u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_repbytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dto.EnumValue RepEnum = 19;
      case 19: {
        if (tag == 152u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dto::EnumValue_IsValid(value)) {
            add_repenum(static_cast< ::dto::EnumValue >(value));
          } else {
            mutable_unknown_fields()->AddVarint(19, value);
          }
        } else if (tag == 154u) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 19,
                 ::dto::EnumValue_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_repenum())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.NestedParent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.NestedParent)
  return false;
#undef DO_
}

void NestedParent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.NestedParent)
  // optional .dto.NestedChild OptionalChild = 1;
  if (has_optionalchild()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->optionalchild_, output);
  }

  // required .dto.NestedChild RequiredChild = 2;
  if (has_requiredchild()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->requiredchild_, output);
  }

  // repeated .dto.NestedChild Children = 3;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->children(i), output);
  }

  // repeated double RepDouble = 4;
  for (int i = 0; i < this->repdouble_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->repdouble(i), output);
  }

  // repeated float RepFloat = 5;
  for (int i = 0; i < this->repfloat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      5, this->repfloat(i), output);
  }

  // repeated int32 RepInt32 = 6;
  for (int i = 0; i < this->repint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->repint32(i), output);
  }

  // repeated int64 RepInt64 = 7;
  for (int i = 0; i < this->repint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      7, this->repint64(i), output);
  }

  // repeated uint32 RepUInt32 = 8;
  for (int i = 0; i < this->repuint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->repuint32(i), output);
  }

  // repeated uint64 RepUInt64 = 9;
  for (int i = 0; i < this->repuint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      9, this->repuint64(i), output);
  }

  // repeated sint32 RepSInt32 = 10;
  for (int i = 0; i < this->repsint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      10, this->repsint32(i), output);
  }

  // repeated sint64 RepSInt64 = 11;
  for (int i = 0; i < this->repsint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      11, this->repsint64(i), output);
  }

  // repeated fixed32 RepFixed32 = 12;
  for (int i = 0; i < this->repfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      12, this->repfixed32(i), output);
  }

  // repeated fixed64 RepFixed64 = 13;
  for (int i = 0; i < this->repfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      13, this->repfixed64(i), output);
  }

  // repeated sfixed32 RepSFixed32 = 14;
  for (int i = 0; i < this->repsfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      14, this->repsfixed32(i), output);
  }

  // repeated sfixed64 RepSFixed64 = 15;
  for (int i = 0; i < this->repsfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      15, this->repsfixed64(i), output);
  }

  // repeated bool RepBool = 16;
  for (int i = 0; i < this->repbool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      16, this->repbool(i), output);
  }

  // repeated string RepString = 17;
  for (int i = 0; i < this->repstring_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repstring(i).data(), this->repstring(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dto.NestedParent.RepString");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->repstring(i), output);
  }

  // repeated bytes RepBytes = 18;
  for (int i = 0; i < this->repbytes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      18, this->repbytes(i), output);
  }

  // repeated .dto.EnumValue RepEnum = 19;
  for (int i = 0; i < this->repenum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->repenum(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.NestedParent)
}

::google::protobuf::uint8* NestedParent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.NestedParent)
  // optional .dto.NestedChild OptionalChild = 1;
  if (has_optionalchild()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->optionalchild_, false, target);
  }

  // required .dto.NestedChild RequiredChild = 2;
  if (has_requiredchild()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->requiredchild_, false, target);
  }

  // repeated .dto.NestedChild Children = 3;
  for (unsigned int i = 0, n = this->children_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->children(i), false, target);
  }

  // repeated double RepDouble = 4;
  for (int i = 0; i < this->repdouble_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(4, this->repdouble(i), target);
  }

  // repeated float RepFloat = 5;
  for (int i = 0; i < this->repfloat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(5, this->repfloat(i), target);
  }

  // repeated int32 RepInt32 = 6;
  for (int i = 0; i < this->repint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->repint32(i), target);
  }

  // repeated int64 RepInt64 = 7;
  for (int i = 0; i < this->repint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(7, this->repint64(i), target);
  }

  // repeated uint32 RepUInt32 = 8;
  for (int i = 0; i < this->repuint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->repuint32(i), target);
  }

  // repeated uint64 RepUInt64 = 9;
  for (int i = 0; i < this->repuint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(9, this->repuint64(i), target);
  }

  // repeated sint32 RepSInt32 = 10;
  for (int i = 0; i < this->repsint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32ToArray(10, this->repsint32(i), target);
  }

  // repeated sint64 RepSInt64 = 11;
  for (int i = 0; i < this->repsint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64ToArray(11, this->repsint64(i), target);
  }

  // repeated fixed32 RepFixed32 = 12;
  for (int i = 0; i < this->repfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(12, this->repfixed32(i), target);
  }

  // repeated fixed64 RepFixed64 = 13;
  for (int i = 0; i < this->repfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(13, this->repfixed64(i), target);
  }

  // repeated sfixed32 RepSFixed32 = 14;
  for (int i = 0; i < this->repsfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32ToArray(14, this->repsfixed32(i), target);
  }

  // repeated sfixed64 RepSFixed64 = 15;
  for (int i = 0; i < this->repsfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64ToArray(15, this->repsfixed64(i), target);
  }

  // repeated bool RepBool = 16;
  for (int i = 0; i < this->repbool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(16, this->repbool(i), target);
  }

  // repeated string RepString = 17;
  for (int i = 0; i < this->repstring_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repstring(i).data(), this->repstring(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dto.NestedParent.RepString");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(17, this->repstring(i), target);
  }

  // repeated bytes RepBytes = 18;
  for (int i = 0; i < this->repbytes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(18, this->repbytes(i), target);
  }

  // repeated .dto.EnumValue RepEnum = 19;
  for (int i = 0; i < this->repenum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      19, this->repenum(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.NestedParent)
  return target;
}

size_t NestedParent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.NestedParent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .dto.NestedChild RequiredChild = 2;
  if (has_requiredchild()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->requiredchild_);
  }
  // repeated .dto.NestedChild Children = 3;
  {
    unsigned int count = this->children_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->children(i));
    }
  }

  // repeated double RepDouble = 4;
  {
    unsigned int count = this->repdouble_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repdouble_size());
    total_size += data_size;
  }

  // repeated float RepFloat = 5;
  {
    unsigned int count = this->repfloat_size();
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repfloat_size());
    total_size += data_size;
  }

  // repeated int32 RepInt32 = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->repint32_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repint32_size());
    total_size += data_size;
  }

  // repeated int64 RepInt64 = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->repint64_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repint64_size());
    total_size += data_size;
  }

  // repeated uint32 RepUInt32 = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->repuint32_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repuint32_size());
    total_size += data_size;
  }

  // repeated uint64 RepUInt64 = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->repuint64_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repuint64_size());
    total_size += data_size;
  }

  // repeated sint32 RepSInt32 = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->repsint32_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repsint32_size());
    total_size += data_size;
  }

  // repeated sint64 RepSInt64 = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->repsint64_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repsint64_size());
    total_size += data_size;
  }

  // repeated fixed32 RepFixed32 = 12;
  {
    unsigned int count = this->repfixed32_size();
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repfixed32_size());
    total_size += data_size;
  }

  // repeated fixed64 RepFixed64 = 13;
  {
    unsigned int count = this->repfixed64_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repfixed64_size());
    total_size += data_size;
  }

  // repeated sfixed32 RepSFixed32 = 14;
  {
    unsigned int count = this->repsfixed32_size();
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repsfixed32_size());
    total_size += data_size;
  }

  // repeated sfixed64 RepSFixed64 = 15;
  {
    unsigned int count = this->repsfixed64_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->repsfixed64_size());
    total_size += data_size;
  }

  // repeated bool RepBool = 16;
  {
    unsigned int count = this->repbool_size();
    size_t data_size = 1UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repbool_size());
    total_size += data_size;
  }

  // repeated string RepString = 17;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repstring_size());
  for (int i = 0; i < this->repstring_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repstring(i));
  }

  // repeated bytes RepBytes = 18;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repbytes_size());
  for (int i = 0; i < this->repbytes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->repbytes(i));
  }

  // repeated .dto.EnumValue RepEnum = 19;
  {
    size_t data_size = 0;
    unsigned int count = this->repenum_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repenum(i));
    }
    total_size += (2UL * count) + data_size;
  }

  // optional .dto.NestedChild OptionalChild = 1;
  if (has_optionalchild()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->optionalchild_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NestedParent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.NestedParent)
  GOOGLE_DCHECK_NE(&from, this);
  const NestedParent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NestedParent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.NestedParent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.NestedParent)
    MergeFrom(*source);
  }
}

void NestedParent::MergeFrom(const NestedParent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.NestedParent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  children_.MergeFrom(from.children_);
  repdouble_.MergeFrom(from.repdouble_);
  repfloat_.MergeFrom(from.repfloat_);
  repint32_.MergeFrom(from.repint32_);
  repint64_.MergeFrom(from.repint64_);
  repuint32_.MergeFrom(from.repuint32_);
  repuint64_.MergeFrom(from.repuint64_);
  repsint32_.MergeFrom(from.repsint32_);
  repsint64_.MergeFrom(from.repsint64_);
  repfixed32_.MergeFrom(from.repfixed32_);
  repfixed64_.MergeFrom(from.repfixed64_);
  repsfixed32_.MergeFrom(from.repsfixed32_);
  repsfixed64_.MergeFrom(from.repsfixed64_);
  repbool_.MergeFrom(from.repbool_);
  repstring_.MergeFrom(from.repstring_);
  repbytes_.MergeFrom(from.repbytes_);
  repenum_.MergeFrom(from.repenum_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_optionalchild()) {
      mutable_optionalchild()->::dto::NestedChild::MergeFrom(from.optionalchild());
    }
    if (from.has_requiredchild()) {
      mutable_requiredchild()->::dto::NestedChild::MergeFrom(from.requiredchild());
    }
  }
}

void NestedParent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.NestedParent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NestedParent::CopyFrom(const NestedParent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.NestedParent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NestedParent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->children())) return false;
  if (has_optionalchild()) {
    if (!this->optionalchild_->IsInitialized()) return false;
  }
  if (has_requiredchild()) {
    if (!this->requiredchild_->IsInitialized()) return false;
  }
  return true;
}

void NestedParent::Swap(NestedParent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NestedParent::InternalSwap(NestedParent* other) {
  children_.UnsafeArenaSwap(&other->children_);
  repdouble_.UnsafeArenaSwap(&other->repdouble_);
  repfloat_.UnsafeArenaSwap(&other->repfloat_);
  repint32_.UnsafeArenaSwap(&other->repint32_);
  repint64_.UnsafeArenaSwap(&other->repint64_);
  repuint32_.UnsafeArenaSwap(&other->repuint32_);
  repuint64_.UnsafeArenaSwap(&other->repuint64_);
  repsint32_.UnsafeArenaSwap(&other->repsint32_);
  repsint64_.UnsafeArenaSwap(&other->repsint64_);
  repfixed32_.UnsafeArenaSwap(&other->repfixed32_);
  repfixed64_.UnsafeArenaSwap(&other->repfixed64_);
  repsfixed32_.UnsafeArenaSwap(&other->repsfixed32_);
  repsfixed64_.UnsafeArenaSwap(&other->repsfixed64_);
  repbool_.UnsafeArenaSwap(&other->repbool_);
  repstring_.UnsafeArenaSwap(&other->repstring_);
  repbytes_.UnsafeArenaSwap(&other->repbytes_);
  repenum_.UnsafeArenaSwap(&other->repenum_);
  std::swap(optionalchild_, other->optionalchild_);
  std::swap(requiredchild_, other->requiredchild_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NestedParent::GetMetadata() const {
  protobuf_dto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dto_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NestedParent

// optional .dto.NestedChild OptionalChild = 1;
bool NestedParent::has_optionalchild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NestedParent::set_has_optionalchild() {
  _has_bits_[0] |= 0x00000001u;
}
void NestedParent::clear_has_optionalchild() {
  _has_bits_[0] &= ~0x00000001u;
}
void NestedParent::clear_optionalchild() {
  if (optionalchild_ != NULL) optionalchild_->::dto::NestedChild::Clear();
  clear_has_optionalchild();
}
const ::dto::NestedChild& NestedParent::optionalchild() const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.OptionalChild)
  return optionalchild_ != NULL ? *optionalchild_
                         : *::dto::NestedChild::internal_default_instance();
}
::dto::NestedChild* NestedParent::mutable_optionalchild() {
  set_has_optionalchild();
  if (optionalchild_ == NULL) {
    optionalchild_ = new ::dto::NestedChild;
  }
  // @@protoc_insertion_point(field_mutable:dto.NestedParent.OptionalChild)
  return optionalchild_;
}
::dto::NestedChild* NestedParent::release_optionalchild() {
  // @@protoc_insertion_point(field_release:dto.NestedParent.OptionalChild)
  clear_has_optionalchild();
  ::dto::NestedChild* temp = optionalchild_;
  optionalchild_ = NULL;
  return temp;
}
void NestedParent::set_allocated_optionalchild(::dto::NestedChild* optionalchild) {
  delete optionalchild_;
  optionalchild_ = optionalchild;
  if (optionalchild) {
    set_has_optionalchild();
  } else {
    clear_has_optionalchild();
  }
  // @@protoc_insertion_point(field_set_allocated:dto.NestedParent.OptionalChild)
}

// required .dto.NestedChild RequiredChild = 2;
bool NestedParent::has_requiredchild() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NestedParent::set_has_requiredchild() {
  _has_bits_[0] |= 0x00000002u;
}
void NestedParent::clear_has_requiredchild() {
  _has_bits_[0] &= ~0x00000002u;
}
void NestedParent::clear_requiredchild() {
  if (requiredchild_ != NULL) requiredchild_->::dto::NestedChild::Clear();
  clear_has_requiredchild();
}
const ::dto::NestedChild& NestedParent::requiredchild() const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RequiredChild)
  return requiredchild_ != NULL ? *requiredchild_
                         : *::dto::NestedChild::internal_default_instance();
}
::dto::NestedChild* NestedParent::mutable_requiredchild() {
  set_has_requiredchild();
  if (requiredchild_ == NULL) {
    requiredchild_ = new ::dto::NestedChild;
  }
  // @@protoc_insertion_point(field_mutable:dto.NestedParent.RequiredChild)
  return requiredchild_;
}
::dto::NestedChild* NestedParent::release_requiredchild() {
  // @@protoc_insertion_point(field_release:dto.NestedParent.RequiredChild)
  clear_has_requiredchild();
  ::dto::NestedChild* temp = requiredchild_;
  requiredchild_ = NULL;
  return temp;
}
void NestedParent::set_allocated_requiredchild(::dto::NestedChild* requiredchild) {
  delete requiredchild_;
  requiredchild_ = requiredchild;
  if (requiredchild) {
    set_has_requiredchild();
  } else {
    clear_has_requiredchild();
  }
  // @@protoc_insertion_point(field_set_allocated:dto.NestedParent.RequiredChild)
}

// repeated .dto.NestedChild Children = 3;
int NestedParent::children_size() const {
  return children_.size();
}
void NestedParent::clear_children() {
  children_.Clear();
}
const ::dto::NestedChild& NestedParent::children(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.Children)
  return children_.Get(index);
}
::dto::NestedChild* NestedParent::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:dto.NestedParent.Children)
  return children_.Mutable(index);
}
::dto::NestedChild* NestedParent::add_children() {
  // @@protoc_insertion_point(field_add:dto.NestedParent.Children)
  return children_.Add();
}
::google::protobuf::RepeatedPtrField< ::dto::NestedChild >*
NestedParent::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.Children)
  return &children_;
}
const ::google::protobuf::RepeatedPtrField< ::dto::NestedChild >&
NestedParent::children() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.Children)
  return children_;
}

// repeated double RepDouble = 4;
int NestedParent::repdouble_size() const {
  return repdouble_.size();
}
void NestedParent::clear_repdouble() {
  repdouble_.Clear();
}
double NestedParent::repdouble(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepDouble)
  return repdouble_.Get(index);
}
void NestedParent::set_repdouble(int index, double value) {
  repdouble_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepDouble)
}
void NestedParent::add_repdouble(double value) {
  repdouble_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepDouble)
}
const ::google::protobuf::RepeatedField< double >&
NestedParent::repdouble() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepDouble)
  return repdouble_;
}
::google::protobuf::RepeatedField< double >*
NestedParent::mutable_repdouble() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepDouble)
  return &repdouble_;
}

// repeated float RepFloat = 5;
int NestedParent::repfloat_size() const {
  return repfloat_.size();
}
void NestedParent::clear_repfloat() {
  repfloat_.Clear();
}
float NestedParent::repfloat(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepFloat)
  return repfloat_.Get(index);
}
void NestedParent::set_repfloat(int index, float value) {
  repfloat_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepFloat)
}
void NestedParent::add_repfloat(float value) {
  repfloat_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepFloat)
}
const ::google::protobuf::RepeatedField< float >&
NestedParent::repfloat() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepFloat)
  return repfloat_;
}
::google::protobuf::RepeatedField< float >*
NestedParent::mutable_repfloat() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepFloat)
  return &repfloat_;
}

// repeated int32 RepInt32 = 6;
int NestedParent::repint32_size() const {
  return repint32_.size();
}
void NestedParent::clear_repint32() {
  repint32_.Clear();
}
::google::protobuf::int32 NestedParent::repint32(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepInt32)
  return repint32_.Get(index);
}
void NestedParent::set_repint32(int index, ::google::protobuf::int32 value) {
  repint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepInt32)
}
void NestedParent::add_repint32(::google::protobuf::int32 value) {
  repint32_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepInt32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NestedParent::repint32() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepInt32)
  return repint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NestedParent::mutable_repint32() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepInt32)
  return &repint32_;
}

// repeated int64 RepInt64 = 7;
int NestedParent::repint64_size() const {
  return repint64_.size();
}
void NestedParent::clear_repint64() {
  repint64_.Clear();
}
::google::protobuf::int64 NestedParent::repint64(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepInt64)
  return repint64_.Get(index);
}
void NestedParent::set_repint64(int index, ::google::protobuf::int64 value) {
  repint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepInt64)
}
void NestedParent::add_repint64(::google::protobuf::int64 value) {
  repint64_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepInt64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
NestedParent::repint64() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepInt64)
  return repint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
NestedParent::mutable_repint64() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepInt64)
  return &repint64_;
}

// repeated uint32 RepUInt32 = 8;
int NestedParent::repuint32_size() const {
  return repuint32_.size();
}
void NestedParent::clear_repuint32() {
  repuint32_.Clear();
}
::google::protobuf::uint32 NestedParent::repuint32(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepUInt32)
  return repuint32_.Get(index);
}
void NestedParent::set_repuint32(int index, ::google::protobuf::uint32 value) {
  repuint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepUInt32)
}
void NestedParent::add_repuint32(::google::protobuf::uint32 value) {
  repuint32_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepUInt32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NestedParent::repuint32() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepUInt32)
  return repuint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NestedParent::mutable_repuint32() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepUInt32)
  return &repuint32_;
}

// repeated uint64 RepUInt64 = 9;
int NestedParent::repuint64_size() const {
  return repuint64_.size();
}
void NestedParent::clear_repuint64() {
  repuint64_.Clear();
}
::google::protobuf::uint64 NestedParent::repuint64(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepUInt64)
  return repuint64_.Get(index);
}
void NestedParent::set_repuint64(int index, ::google::protobuf::uint64 value) {
  repuint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepUInt64)
}
void NestedParent::add_repuint64(::google::protobuf::uint64 value) {
  repuint64_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepUInt64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
NestedParent::repuint64() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepUInt64)
  return repuint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
NestedParent::mutable_repuint64() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepUInt64)
  return &repuint64_;
}

// repeated sint32 RepSInt32 = 10;
int NestedParent::repsint32_size() const {
  return repsint32_.size();
}
void NestedParent::clear_repsint32() {
  repsint32_.Clear();
}
::google::protobuf::int32 NestedParent::repsint32(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepSInt32)
  return repsint32_.Get(index);
}
void NestedParent::set_repsint32(int index, ::google::protobuf::int32 value) {
  repsint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepSInt32)
}
void NestedParent::add_repsint32(::google::protobuf::int32 value) {
  repsint32_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepSInt32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NestedParent::repsint32() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepSInt32)
  return repsint32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NestedParent::mutable_repsint32() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepSInt32)
  return &repsint32_;
}

// repeated sint64 RepSInt64 = 11;
int NestedParent::repsint64_size() const {
  return repsint64_.size();
}
void NestedParent::clear_repsint64() {
  repsint64_.Clear();
}
::google::protobuf::int64 NestedParent::repsint64(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepSInt64)
  return repsint64_.Get(index);
}
void NestedParent::set_repsint64(int index, ::google::protobuf::int64 value) {
  repsint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepSInt64)
}
void NestedParent::add_repsint64(::google::protobuf::int64 value) {
  repsint64_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepSInt64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
NestedParent::repsint64() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepSInt64)
  return repsint64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
NestedParent::mutable_repsint64() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepSInt64)
  return &repsint64_;
}

// repeated fixed32 RepFixed32 = 12;
int NestedParent::repfixed32_size() const {
  return repfixed32_.size();
}
void NestedParent::clear_repfixed32() {
  repfixed32_.Clear();
}
::google::protobuf::uint32 NestedParent::repfixed32(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepFixed32)
  return repfixed32_.Get(index);
}
void NestedParent::set_repfixed32(int index, ::google::protobuf::uint32 value) {
  repfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepFixed32)
}
void NestedParent::add_repfixed32(::google::protobuf::uint32 value) {
  repfixed32_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepFixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NestedParent::repfixed32() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepFixed32)
  return repfixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NestedParent::mutable_repfixed32() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepFixed32)
  return &repfixed32_;
}

// repeated fixed64 RepFixed64 = 13;
int NestedParent::repfixed64_size() const {
  return repfixed64_.size();
}
void NestedParent::clear_repfixed64() {
  repfixed64_.Clear();
}
::google::protobuf::uint64 NestedParent::repfixed64(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepFixed64)
  return repfixed64_.Get(index);
}
void NestedParent::set_repfixed64(int index, ::google::protobuf::uint64 value) {
  repfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepFixed64)
}
void NestedParent::add_repfixed64(::google::protobuf::uint64 value) {
  repfixed64_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepFixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
NestedParent::repfixed64() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepFixed64)
  return repfixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
NestedParent::mutable_repfixed64() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepFixed64)
  return &repfixed64_;
}

// repeated sfixed32 RepSFixed32 = 14;
int NestedParent::repsfixed32_size() const {
  return repsfixed32_.size();
}
void NestedParent::clear_repsfixed32() {
  repsfixed32_.Clear();
}
::google::protobuf::int32 NestedParent::repsfixed32(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepSFixed32)
  return repsfixed32_.Get(index);
}
void NestedParent::set_repsfixed32(int index, ::google::protobuf::int32 value) {
  repsfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepSFixed32)
}
void NestedParent::add_repsfixed32(::google::protobuf::int32 value) {
  repsfixed32_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepSFixed32)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NestedParent::repsfixed32() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepSFixed32)
  return repsfixed32_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NestedParent::mutable_repsfixed32() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepSFixed32)
  return &repsfixed32_;
}

// repeated sfixed64 RepSFixed64 = 15;
int NestedParent::repsfixed64_size() const {
  return repsfixed64_.size();
}
void NestedParent::clear_repsfixed64() {
  repsfixed64_.Clear();
}
::google::protobuf::int64 NestedParent::repsfixed64(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepSFixed64)
  return repsfixed64_.Get(index);
}
void NestedParent::set_repsfixed64(int index, ::google::protobuf::int64 value) {
  repsfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepSFixed64)
}
void NestedParent::add_repsfixed64(::google::protobuf::int64 value) {
  repsfixed64_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepSFixed64)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
NestedParent::repsfixed64() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepSFixed64)
  return repsfixed64_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
NestedParent::mutable_repsfixed64() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepSFixed64)
  return &repsfixed64_;
}

// repeated bool RepBool = 16;
int NestedParent::repbool_size() const {
  return repbool_.size();
}
void NestedParent::clear_repbool() {
  repbool_.Clear();
}
bool NestedParent::repbool(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepBool)
  return repbool_.Get(index);
}
void NestedParent::set_repbool(int index, bool value) {
  repbool_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepBool)
}
void NestedParent::add_repbool(bool value) {
  repbool_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepBool)
}
const ::google::protobuf::RepeatedField< bool >&
NestedParent::repbool() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepBool)
  return repbool_;
}
::google::protobuf::RepeatedField< bool >*
NestedParent::mutable_repbool() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepBool)
  return &repbool_;
}

// repeated string RepString = 17;
int NestedParent::repstring_size() const {
  return repstring_.size();
}
void NestedParent::clear_repstring() {
  repstring_.Clear();
}
const ::std::string& NestedParent::repstring(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepString)
  return repstring_.Get(index);
}
::std::string* NestedParent::mutable_repstring(int index) {
  // @@protoc_insertion_point(field_mutable:dto.NestedParent.RepString)
  return repstring_.Mutable(index);
}
void NestedParent::set_repstring(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepString)
  repstring_.Mutable(index)->assign(value);
}
void NestedParent::set_repstring(int index, const char* value) {
  repstring_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dto.NestedParent.RepString)
}
void NestedParent::set_repstring(int index, const char* value, size_t size) {
  repstring_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dto.NestedParent.RepString)
}
::std::string* NestedParent::add_repstring() {
  // @@protoc_insertion_point(field_add_mutable:dto.NestedParent.RepString)
  return repstring_.Add();
}
void NestedParent::add_repstring(const ::std::string& value) {
  repstring_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepString)
}
void NestedParent::add_repstring(const char* value) {
  repstring_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dto.NestedParent.RepString)
}
void NestedParent::add_repstring(const char* value, size_t size) {
  repstring_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dto.NestedParent.RepString)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
NestedParent::repstring() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepString)
  return repstring_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
NestedParent::mutable_repstring() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepString)
  return &repstring_;
}

// repeated bytes RepBytes = 18;
int NestedParent::repbytes_size() const {
  return repbytes_.size();
}
void NestedParent::clear_repbytes() {
  repbytes_.Clear();
}
const ::std::string& NestedParent::repbytes(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepBytes)
  return repbytes_.Get(index);
}
::std::string* NestedParent::mutable_repbytes(int index) {
  // @@protoc_insertion_point(field_mutable:dto.NestedParent.RepBytes)
  return repbytes_.Mutable(index);
}
void NestedParent::set_repbytes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepBytes)
  repbytes_.Mutable(index)->assign(value);
}
void NestedParent::set_repbytes(int index, const char* value) {
  repbytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dto.NestedParent.RepBytes)
}
void NestedParent::set_repbytes(int index, const void* value, size_t size) {
  repbytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dto.NestedParent.RepBytes)
}
::std::string* NestedParent::add_repbytes() {
  // @@protoc_insertion_point(field_add_mutable:dto.NestedParent.RepBytes)
  return repbytes_.Add();
}
void NestedParent::add_repbytes(const ::std::string& value) {
  repbytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepBytes)
}
void NestedParent::add_repbytes(const char* value) {
  repbytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dto.NestedParent.RepBytes)
}
void NestedParent::add_repbytes(const void* value, size_t size) {
  repbytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dto.NestedParent.RepBytes)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
NestedParent::repbytes() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepBytes)
  return repbytes_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
NestedParent::mutable_repbytes() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepBytes)
  return &repbytes_;
}

// repeated .dto.EnumValue RepEnum = 19;
int NestedParent::repenum_size() const {
  return repenum_.size();
}
void NestedParent::clear_repenum() {
  repenum_.Clear();
}
::dto::EnumValue NestedParent::repenum(int index) const {
  // @@protoc_insertion_point(field_get:dto.NestedParent.RepEnum)
  return static_cast< ::dto::EnumValue >(repenum_.Get(index));
}
void NestedParent::set_repenum(int index, ::dto::EnumValue value) {
  assert(::dto::EnumValue_IsValid(value));
  repenum_.Set(index, value);
  // @@protoc_insertion_point(field_set:dto.NestedParent.RepEnum)
}
void NestedParent::add_repenum(::dto::EnumValue value) {
  assert(::dto::EnumValue_IsValid(value));
  repenum_.Add(value);
  // @@protoc_insertion_point(field_add:dto.NestedParent.RepEnum)
}
const ::google::protobuf::RepeatedField<int>&
NestedParent::repenum() const {
  // @@protoc_insertion_point(field_list:dto.NestedParent.RepEnum)
  return repenum_;
}
::google::protobuf::RepeatedField<int>*
NestedParent::mutable_repenum() {
  // @@protoc_insertion_point(field_mutable_list:dto.NestedParent.RepEnum)
  return &repenum_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dto

// @@protoc_insertion_point(global_scope)
